name: Deployment workflow

on:
  push:
    branches: [main]


jobs:
  nuxt:
    name: Nuxt build
    runs-on: ubuntu-latest
    env:
      NUXT_API_URL: https://varzea.asfl.com.br
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: ./.github/actions/setup-node

      - name: nuxt-build
        run: npm run build
        working-directory: application

      - name: nuxt-generate
        run: npm run generate
        working-directory: application

      - name: Upload nuxt build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            ${{ github.workspace }}/application/public
  
  docker:
    name: Docker build
    runs-on: ubuntu-latest
    needs: [nuxt]
    steps:
      - uses: actions/checkout@v4

      - name: Download nuxt build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: |
            ${{ github.workspace }}/application/public

      - name: Setup PHP
        uses: ./.github/actions/setup-php

      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          context: .
          file: docker/php/Dockerfile
          target: production
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/varzea:latest 

  deploy:
    name: Deploy aws
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
      - name: executing deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_KEY }}
          port: ${{ secrets.AWS_PORT }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/varzea:latest  
            cd varzea
            make stop
            docker volume rm docker_application
            git pull
            make production
            make deploy